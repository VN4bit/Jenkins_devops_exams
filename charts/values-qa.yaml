environment: qa
namespace: qa

# Main application deployment configuration
replicaCount: 1

image:
  repository: vn4bit/movie-service  # Default to movie service
  tag: develop-latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  targetPort: 8000
  nodePort: 30001

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

movieService:
  replicaCount: 1
  image:
    repository: vn4bit/movie-service
    tag: develop-latest

castService:
  replicaCount: 1
  image:
    repository: vn4bit/cast-service
    tag: develop-latest

nginx:
  replicaCount: 1
  service:
    type: ClusterIP

ingress:
  enabled: true
  className: ""
  annotations: {}
  hosts:
    - host: microservice-qa.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Database configuration
database:
  uri: "postgresql://movie_db_username:movie_db_password@movie-db/movie_db_qa"

# Service URLs
services:
  castServiceUrl: "http://cast-service:8000/api/v1/casts/"
